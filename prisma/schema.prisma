generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  username String 
  password String
  image String?
  bio String @default("Hey there! I'm using Chateo")
  isVerified Boolean? @default(false)
  verificationCode Int
  createdAt DateTime @default(now())
  accessToken String?

  seenIds String[] @db.ObjectId
  seen Message[] @relation("seens", fields: [seenIds], references: [id])

  conversationIds String[] @db.ObjectId
  conversations Conversation[] @relation(fields: [conversationIds], references: [id])

  messages Message[]

  savedUsers UserSaved[] @relation("user_saving_saved_user")
  savedByUsers UserSaved[] @relation("saved_user_saved_by_user")

  @@map("users")
}

model UserSaved {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  userId String @db.ObjectId
  user User @relation(name: "user_saving_saved_user", fields: [userId], references: [id])

  savedUserId String @db.ObjectId
  savedUser User @relation(name: "saved_user_saved_by_user", fields: [savedUserId], references: [id])

  @@map("user_saved_users")
  @@index([userId, savedUserId])
}

model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  content String?
  image String?

  seenIds String[] @db.ObjectId
  seen User[] @relation("seens", fields: [seenIds], references: [id])

  senderId String @db.ObjectId
  sender User @relation(fields: [senderId], references: [id], onDelete: Cascade)

  conversationId String @db.ObjectId
  conversation Conversation @relation(fields: [conversationId], references: [id])

  @@map("messages")
}

model Conversation {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  createdAt DateTime @default(now())
  lastMessageAt DateTime @default(now())
  isGroup Boolean? @default(false)

  userIds String[] @db.ObjectId
  users User[] @relation(fields: [userIds], references: [id])

  messages Message[]

  @@map("conversations")
}
